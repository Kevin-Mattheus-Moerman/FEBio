name: CMake

on:
  push:
    branches: [ ops/containerization ]
  pull_request:
    branches: [ master ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release
  AWS_REGION: us-east-1

jobs:
  login:
    runs-on: ubuntu-latest
    steps:
      - name: Configure aws
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{secrets.AWS_ACCESS_KEY_ID}}
          aws-secret-access-key: ${{secrets.AWS_SECRET_ACCESS_KEY}}
          aws-region: ${{env.AWS_REGION}}
      - id: aws_login
        run: echo "AWS_PASSWORD=$(aws ecr get-login-password)" >> $GITHUB_ENV
  one:
    needs: login
    runs-on: ubuntu-latest
    steps:
      - name: Dump GitHub context
        env:
          GITHUB_CONTEXT: ${{ toJSON(github) }}
        run: echo "$GITHUB_CONTEXT"
      - name: Dump job context
        env:
          JOB_CONTEXT: ${{ toJSON(job) }}
        run: echo "$JOB_CONTEXT"
      - name: Dump steps context
        env:
          STEPS_CONTEXT: ${{ toJSON(steps) }}
        run: echo "$STEPS_CONTEXT"
      - name: Dump runner context
        env:
          RUNNER_CONTEXT: ${{ toJSON(runner) }}
        run: echo "$RUNNER_CONTEXT"
      - name: Dump strategy context
        env:
          STRATEGY_CONTEXT: ${{ toJSON(strategy) }}
        run: echo "$STRATEGY_CONTEXT"
      - name: Dump matrix context
        env:
          MATRIX_CONTEXT: ${{ toJSON(matrix) }}
        run: echo "$MATRIX_CONTEXT"
  build:
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    needs: login
    runs-on: ubuntu-18.04
      #container:
      #  image: 353328028284.dkr.ecr.us-east-1.amazonaws.com/febio:latest
      #  credentials:
      #    username: AWS
      #    password: ${{ needs.login.outputs.aws_password }}
    steps:
      #- uses: actions/checkout@v2

      - name: Dump GitHub env
        env:
          GITHUB_ENV: ${{ toJSON(env) }}
        run: echo "$GITHUB_ENV"
      #- name: Configure CMake
      #  # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      #  # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      #  run: cmake -B ${{github.workspace}}/cmbuild -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}

      #- name: Build
      #  # Build your program with the given configuration, 2 cores is default jobs on Linux
      #  run: cmake --build ${{github.workspace}}/cmbuild --config ${{env.BUILD_TYPE}} -j 2
